2014-12-10(水) 22:35:53


# このソフトウェアについて
大昔に書いたゲームボーイソフトの解析用逆アセンブラです。




# インストール
インストールの際にはSBCLとquicklispがあることを想定していますが、ASDFさ
えあればquicklispはなくても問題ないはずです。
http://www.sbcl.org/
http://www.quicklisp.org/beta/
Windows8.1+Cygwin+SBCL1.1.17(x64)上で動くことを確認しています。
ずっと以前にはLinux+SBCL(x32)で使っていました。

Makefileを開いてASDFのレジストリの正しいパス（asdf:*central-registry*で
見られる）をDESTに指定してから、Makefileのあるディレクトリに移動して
$ make install
でインストールできます。

作者の環境でWindowsのシンボリック・リンクがLinuxと同じように機能しなかっ
たので、苦肉の策としてmake installするとASDFのレジストリ（たとえば
/home/username/quicklisp/quicklisp）に.lisp、.asdファイルを全部コピーす
るようにしてあります。それがいやだという方は手動で.asdファイルのリンク
をはってインストールしてください。たぶん↓のような感じです。
$ ln -s z80disas.asd /path/of/asdf/registry/
$ sbcl
(require :asdf)
(asdf:load-system :z80disas)




# 使いかた
disasgb ロムファイル [注釈ファイル] > 出力ファイル

注釈ファイルは無視してもかまいません。




# 注釈ファイルの書きかた
注釈ファイルは
[1]ロムのデータ領域がどこからどこまでなのか逆アセンブラに教えてあげる
[2]特定の関数に名前やコメントをつけられるようにする
ためにあります。なくても逆アセンブルそのものは問題なくできます。ただ、
ないとデータ領域も逆アセンブルするので、データ部とコード部の境界付近で
たまに変なコードを出力することになるでしょう。


↓注釈ファイルの例↓
;セミコロンでコメントアウトできる。その行は以降無視される。
;最初に、関数呼び出し（CALL 0180のような命令）に注記するコメントを書ける。

(
(#x0180 "乱数発生器")
(#x6a2a "攻撃するユニットの先頭アドレスをdeに入れる。AFhなど")
(#x7019 "bの値を成功度(a450)に加える")
)

;(アドレス "コメント")という形式になっている。
;#xは16進数を意味する。10進数で書きたければなくてもよい。
;上の例のように書くと
;...
;00:30BB CD 80 01    CALL  0180    //乱数発生器
;...
;というように出力にコメントが入る。
;なおバンクは一切考慮しないため、バンク間で重複がある場合はコメントにそう書くしかない。
;全体を()で括ること。この機能がいらない場合はただ()とだけ書いて次に行く。

;次にデータ領域の指定
nil ;ROM0終わり
nil ;ROM1終わり
nil ;ROM2〃
nil ;ROM3〃
nil ;ROM4
nil ;ROM5
nil ;ROM6
#x4000 #x4100 "武器データ"
#x42c0 #x44f0 "防具データ"
#x5a00 #x6000 "モンスターの名前"
nil ;ROM7
nil ;ROM8
nil ;ROM9
nil ;ROMa
;....
;バンクごとに、データ領域に対して
;先頭アドレス 末端アドレス+1 "データの説明"
;と指定していく。そのバンクのデータの列挙が終わったらnilを置く。
;上のように書くと、下のようにバンク7の4000h-40FFhがデータ表示に切り替わることになる。
;==data:武器データ==
;07:4000 02 22 10 03 10 00 0A 0E 00 00 00 00 08 00 00 01 
;07:4010 08 18 07 03 4A 14 2C 00 0D 00 00 00 15 00 00 00 
;07:4020 11 30 0D 00 33 0F 00 0E 00 00 00 00 07 1C 00 09 
;07:4040 08 1F 28 01 12 14 0B 00 0D 00 00 00 10 03 00 10 
;なお、注記ファイルを最後まで読み込むと残りはnilと解釈するので、
;律義にロムのバンクの総数を数える必要はなく、書きたいだけ書いたら打ち切れば良い。